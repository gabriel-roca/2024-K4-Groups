#This document gives an example of what our code would look like
#when we check for the prime graph complement of one of these extensions.
#For this example we are going to build the Semidirect product between Sz(8) of dimension 4 over GF(8)
#Necessary Functions
PrimeGraphComplement := function(group)
    local G, vertexSet, edgeSet, elementOrders;
    G := Image(IsomorphismPermGroup(group));
    vertexSet := PrimeDivisors(Order(G));
    edgeSet := Combinations(vertexSet, 2);
    elementOrders := Set(ConjugacyClasses(G), x -> Order(Representative(x)));
    edgeSet := Filtered(edgeSet, x -> not x[1] * x[2] in elementOrders);
    return [vertexSet, edgeSet];
end;

FixedPointsFromRep := function(rep, p)
    local finalList, G, primes, eltsOfOrderR, r, g;
    finalList := [];
    G := Source(rep);
    primes := PrimeDivisors(Order(G));
    for r in primes do
        eltsOfOrderR := Filtered(Elements(SylowSubgroup(G, r)), x -> Order(x) = r);
        for g in eltsOfOrderR do
            if Z(p)^0 in Eigenvalues(GF(p), rep(g)) then
                Add(finalList, r);
            fi;
        od;
    od;
    return Set(finalList);
end;

PrimeGraphCompFromRep := function(rep, p)
    local finalList, G, pgc, FixedPoints, RemovedEdges, els, edges;
    G := Source(rep);;
    pgc := PrimeGraphComplement(G);;
    FixedPoints := FixedPointsFromRep(rep,p);;
    RemovedEdges := [];;
    for els in FixedPoints do;
        if p <= els then; 
            Append(RemovedEdges, [[p,els]]);
        fi;
        if p > els then;
            Append(RemovedEdges, [[els, p]]);
        fi;
    od;
    for edges in RemovedEdges do;
        if edges in pgc[2] then;
            RemoveSet(pgc[2], edges);
        fi;
    od;
    return(pgc);
    end;

        


#Beginning of the code
a := [
[0*Z(8),Z(8)^7,0*Z(8),0*Z(8)],
[Z(8)^7,0*Z(8),0*Z(8),0*Z(8)],
[0*Z(8),0*Z(8),0*Z(8),Z(8)^7],
[0*Z(8),0*Z(8),Z(8)^7,0*Z(8)]
];

b := [
[Z(8)^7,0*Z(8),0*Z(8),0*Z(8)],
[0*Z(8),0*Z(8),Z(8)^7,0*Z(8)],
[Z(8)^7,Z(8)^6,0*Z(8),Z(8)^5],
[Z(8)^6,Z(8)^4,Z(8)^4,Z(8)^7]
];

sz8 := Group(a,b);; G := SemidirectProduct(sz8, GF(8)^4);;
PrimeGraphComplement(G);
#This returns the vertex and edge set of the prime graph complement of G

#However, this is not the most effecient method sometimes. If the group has quadrillions of elements
#this method may no longer be reasonable. We can also use the fact that these elements are matrices to find 
#the graph as well.

G := AtlasGroup("Sz(8)");; 
Reps := IrreducibleRepresentations(G, GF(2));; 
#this function will give the set of all irreducible representations over field of characteristic 2 (change prime as needed)
#in this list should be the representation above, you just need to put some legwork in to find it
#assume that the representation you want is the 3rd element of the list
Map := Reps[3];;
FixedPointsFromRep(Map, 2);
#This will return all the vertices p such that you should remove the 2-p edge from the prime graph complement of Sz(8)
#Since we are doing an extension of Sz(8) via a 2-group we will have a subgraph of the pgc of Sz(8) 
#Furthermore, this list gives the primes whose edges from 2 should be removed
#However, if that is too much work I present the alternative
PrimeGraphCompFromRep(Map, 2);
#This returns the prime graph complement of the group extension





